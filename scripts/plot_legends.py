'''
  Partially generated by GPT (04/07/2025).
'''
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import matplotlib.font_manager as fm
import os

plt.rcParams.update({
    'font.family': 'Times New Roman'
})
for font in fm.findSystemFonts(fontpaths=None, fontext='ttf'):
    if "Libertine_R" in font:
        font_prop = fm.FontProperties(fname=font)
        font_name = font_prop.get_name()
        plt.rcParams.update({
            'font.family': font_name
        })

# Dummy legend handles (could also use Line2D or Bar elements)
legend_labels = ['Teseo', 'Sortledton', 'Spruce', 'GTX', 'RadixGraph']
colors = ['steelblue', 'orange', 'green', 'red', 'purple']
hatches = ['/', '\\', 'x', '-', 'o']

# Create patches with color and hatch
handles = [
    mpatches.Patch(facecolor=color, hatch=hatch, edgecolor='black', label=label)
    for color, hatch, label in zip(colors, hatches, legend_labels)
]

# Create figure
fig, ax = plt.subplots(figsize=(12, 1))
ax.legend(handles=handles, loc='center', ncol=3, frameon=False, fontsize=30)

# Hide everything else
ax.axis('off')
plt.tight_layout()
if not os.path.exists("./figures"):
    os.makedirs("./figures")
plt.savefig("./figures/legends.pdf")